include:
  - project: reductech/templates/cicd/dotnet
    file: .gitlab-ci.windows.yml

stages:
  - build
  - test
  - integration
  - quality
  - package
  - sign
  - push

workflow:
  rules:
    - if: $CI_COMMIT_BRANCH == 'master'
    - if: $CI_MERGE_REQUEST_ID
    - if: $CI_COMMIT_BRANCH !~ /^\d+-/
    - if: $CI_COMMIT_TAG
    - if: $CI_PIPELINE_SOURCE == 'schedule'

variables:
  PACKAGE_NAME_NUGET: Reductech.Sequence.Connectors.Nuix
  PACKAGE_NAME_DLL: Reductech.Sequence.Connectors.Nuix
  GIT_SUBMODULE_STRATEGY: normal
  PUBLISH_CONNECTOR: 1
  PUBLISH_NUGETORG: 1

.fix_coverage:
  - &fix_coverage |
    $report = Get-Content -Path "*/coverage.cobertura.xml" -Raw
    $fixPaths = $report -replace "filename=`".+?${env:CI_PROJECT_NAME}(/|\\)", "filename=`""
    $fixPaths = $fixPaths -replace '\\', '/'
    $outPath = Join-Path (Get-Location) "coverage.$($env:CI_JOB_NAME -replace "[^\w]+", "-").xml"
    [System.IO.File]::WriteAllText($outPath, $fixPaths)

test dev:
  script:
    - dotnet test --no-build --configuration $CONFIG -v normal
      --filter "Category!=Integration&Category!=IntegrationShort"
      --collect:"XPlat Code Coverage" --settings coverlet.runsettings --results-directory ./
    - *fix_coverage

integration short:
  stage: integration
  extends:
    - .default_before_script
  needs: []
  tags:
    - nuix
  variables:
    CONFIG: $CONFIG_DEV
    NUGET_PROJECT_ID: $NUGET_PROJECT_ID_DEV
    NUGET_USERNAME: $NUGET_USER_DEV
    NUGET_TOKEN: $NUGET_TOKEN_DEV
  after_script:
    - dotnet nuget remove source reductech
  script:
    - dotnet restore --packages ./packages
    - dotnet test --no-restore --configuration $CONFIG -v normal
      --filter "Category!=Integration"
      --collect:"XPlat Code Coverage" --settings coverlet.runsettings --results-directory ./
    - *fix_coverage
  artifacts:
    paths:
      - 'coverage.*.xml'
    expire_in: 2 hours
  rules:
    - if: $CI_PIPELINE_SOURCE == 'schedule'
      when: never
    # - if: $CI_COMMIT_BRANCH == 'master'
    - if: &not_release $CI_COMMIT_TAG !~ /^v(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?$/i
      when: manual
      allow_failure: true

integration full:
  extends:
    - integration short
  script:
    - dotnet restore --packages ./packages
    - dotnet test --no-restore --configuration $CONFIG -v normal
      --collect:"XPlat Code Coverage" --settings coverlet.runsettings --results-directory ./
    - *fix_coverage
    - |
      dotnet test --no-restore --configuration $CONFIG --list-tests |
        ForEach-Object {
          if ($_ -match 'caseName: "(.+?)\((\d+\.\d+)\)') {
            [pscustomobject]@{ Name = $Matches[1] ; Version = $Matches[2] }
          }
        } | group Version | select Name, Count
  rules:
    - if: $CI_PIPELINE_SOURCE == 'schedule'
    - if: $CI_COMMIT_BRANCH == 'master'
      when: manual
      allow_failure: true
    - if: *not_release
      when: manual
      allow_failure: true

# integration short release:
#   extends:
#     - integration short
#     - .rules_release
#   variables:
#     CONFIG: $CONFIG_RELEASE
#     NUGET_PROJECT_ID: $NUGET_PROJECT_ID_RELEASE
#     NUGET_USERNAME: $NUGET_USER_PROD
#     NUGET_TOKEN: $NUGET_TOKEN_PROD

push to nuget dev:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'schedule'
      when: never
    - if: $CI_COMMIT_BRANCH == 'master'
    - if: *not_release
      when: manual
      allow_failure: true

# Skipping mutation testing as Stryker currently doesn't support filters
mutation testing:
  rules:
    - when: never

code coverage dev:
  needs:
    - job: test dev
      optional: false
    - job: version check dev
      optional: false
    - job: integration short
      optional: true
    - job: integration full
      optional: true

code coverage release:
  needs:
    - job: test release
      optional: false
    - job: version check release
      optional: false
    - job: integration short
      optional: true
    - job: integration full
      optional: true
